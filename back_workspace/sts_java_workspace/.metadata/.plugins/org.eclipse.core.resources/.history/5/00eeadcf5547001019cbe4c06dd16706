package chat.server;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;

// 대화형 서버 쓰레드 : 접속자 마다 1대 1 대응하여 인스턴스가 생성될 예정..
// 대화가 가능하려면 입,출력과 소켓을 가지고 있어야 함
public class ServerThread extends Thread {
	GUIServer guiServer;
	Socket socket;
	BufferedReader buffr;
	BufferedWriter buffw;
	
	// 소켓을 서버로부터 전달받으면 됨... 접속자가 들어올 때마다
	public ServerThread(GUIServer guiServer, Socket socket) {
		this.guiServer = guiServer;
		this.socket = socket;
		
		// 접속과 동시에 스트림을 얻어놓아야 대화 가능
		try {
			buffr = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			buffw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	// 듣기
	public void listen() {
		String msg = null;
		try {
			msg = buffr.readLine();
			server.area.append(msg+"\n"); // 듣고 기록하기
			send(msg); // 듣자마자 기록한 것 말하기
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	// 말하기
	public void send(String msg) {
		try {
			buffw.write(msg+"\n");
			buffw.flush(); // 출력 스트림 중 버퍼 처리된 것만 flush 처리...
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
}
