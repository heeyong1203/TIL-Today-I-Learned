package shop;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import shop.pages.CS;
import shop.pages.Home;
import shop.pages.MyPage;
import shop.pages.Page;
import shop.pages.Product;
import util.ImageUtil;

/* 화면을 4개 보유한 쇼핑몰 애플리케이션의 화면 전환 처리 방법 */
public class ShopMain extends JFrame implements ActionListener{
	JPanel p_north; // 북쪽 패널
	JButton bt_home;
	JButton bt_product;
	JButton bt_myPage;
	JButton bt_cs;

	JPanel p_center; // 프로그램 가동과 동시에 이 패널에는 앞으로 사용하게 될 페이지들을 미리 부착하게 될 예정
	
	/*
	  	URI : 자원을 표현하는 방법 (표준이 정해짐)
		URL : URI 중 유달리, 해당 자원의 위치를 표현한다면 URL이라고 부름
	 */
	ImageUtil imageUtil;
	
	/* 쇼핑몰을 구성하는 모든 페이지를 보유한다. */
	Page[] pageArray = new Page[4];
	
	public ShopMain() {
		imageUtil = new ImageUtil();
		
		// 생성
		p_north = new JPanel();
		
		bt_home = new JButton(imageUtil.getIcon("home.png", 35, 35));
		bt_product = new JButton(imageUtil.getIcon("product.png", 35, 35));
		bt_myPage = new JButton(imageUtil.getIcon("mypage.png", 35, 35));
		bt_cs = new JButton(imageUtil.getIcon("cs.png", 35, 35));
		
		p_center = new JPanel();
		
		pageArray[0] = new Home();
		pageArray[1] = new Product();
		pageArray[2] = new MyPage();
		pageArray[3] = new CS();
		
		// 스타일
		p_north.setPreferredSize(new Dimension(800, 50));
		p_north.setBackground(Color.YELLOW);
		
		Dimension d = new Dimension(40, 40);
		bt_home.setPreferredSize(d);
		bt_product.setPreferredSize(d);
		bt_myPage.setPreferredSize(d);
		bt_cs.setPreferredSize(d);
		
		// 조립
		p_north.add(bt_home);
		p_north.add(bt_product);
		p_north.add(bt_myPage);
		p_north.add(bt_cs);
		
		p_center.add(home); // 메인 페이지를 센터 패널에 부착
		p_center.add(product); 
		p_center.add(myPage); 
		p_center.add(cs); 
		
		add(p_north, BorderLayout.NORTH);
		add(p_center); // 프레임의 센터에 패널 부착
		
		// 버튼들과 리스너 생성
		bt_home.addActionListener(this);
		bt_product.addActionListener(this);
		bt_myPage.addActionListener(this);
		bt_cs.addActionListener(this);

		setSize(800 ,650);
		setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setLocationRelativeTo(null); // 무엇을 중심으로 위치할 것인가? null 값을 주면 중앙에 생성됨
	}

	// 원하는 페이지만 보여지게 처리하는 메서드
	public void showPage(JPanel page) {
		home.setVisible(false);
		product.setVisible(false);
		myPage.setVisible(false);
		cs.setVisible(false);
		
		page.setVisible(true);
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		Object obj=e.getSource();
		if(obj == bt_home) {
			showPage(home);
		}else if(obj == bt_product) {
			showPage(product);
		}else if(obj == bt_myPage) {
			showPage(myPage);
		}else if(obj == bt_cs) {
			showPage(cs);
		}
		
	}

	public static void main(String[] args) {
		new ShopMain();
	}


}
