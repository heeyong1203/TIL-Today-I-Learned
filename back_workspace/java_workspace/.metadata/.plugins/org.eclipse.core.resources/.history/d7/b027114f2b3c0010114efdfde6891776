package shop;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.net.URL;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

/* 화면을 4개 보유한 쇼핑몰 애플리케이션의 화면 전환 처리 방법 */
public class ShopMain extends JFrame{
	JPanel p_north; // 북쪽 패널
	JButton bt_home;
	JButton bt_product;
	JButton bt_mypage;
	JButton bt_cs;

	JPanel p_center; // 프로그램 가동과 동시에 이 패널에는 앞으로 사용하게 될 페이지들을 미리 부착하게 될 예정
	
	public ShopMain() {
		// 아이콘 얻기
		Class myClass = this.getClass(); // this 생략 가능
		
		// 패키지 안에 들어있는 자원의 이름을 명시하면, URL을 반환해 줌
		URL url = myClass.getClassLoader().getResource("home.png");
		// ImageIcon 자체는 크기를 지정할 수 없으므로, 아이콘 사용에 앞서 크기 조절이 가능한 이미지를 먼저 얻어야 함
		// ToolKit을 통해 Image 객체는 픽셀 정보까지 접근할 수 없기 때문에 단순 이미지를 보여줄 때 이용가치가 있음
		// 회사의 이미지로그를 박은 워터마크 처리 등의 보다 섬세하고 기술적인 이미지 제어 →
		BufferedImage bufferedImg;
		
		ImageIcon icon = new ImageIcon(url);
		
		// 생성
		p_north = new JPanel();
		
		bt_home = new JButton(icon);
		bt_product = new JButton("상품");
		bt_mypage = new JButton("마이페이지");
		bt_cs = new JButton("고객센터");
		
		p_center = new JPanel();
		
		// 스타일
		p_north.setPreferredSize(new Dimension(800, 50));
		p_north.setBackground(Color.YELLOW);
		
		// 조립
		p_north.add(bt_home);
		p_north.add(bt_product);
		p_north.add(bt_mypage);
		p_north.add(bt_cs);
		add(p_north, BorderLayout.NORTH);
		add(p_center); // 프레임의 센터에 패널 부착
				
		setSize(800 ,650);
		setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setLocationRelativeTo(null); // 무엇을 중심으로 위치할 것인가? null 값을 주면 중앙에 생성됨

	}

		
	public static void main(String[] args) {
		new ShopMain();
	}
}
