package table;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;

public class MemberRegist extends JFrame{ // extends JFrame을 하므로써 현재 this는 JFrame
	// 서쪽 영역
	JPanel p_west;
	JTextField t_id; // 아이디
	JTextField t_name; // 성명
	JTextField t_tel; // 연락처
	JButton bt;
	
	// 센터 영역
	JPanel p_center;
	JTable table;
	JScrollPane scroll;
	
	MyModel myModel;
	
	public MemberRegist() {
		// 생성
		p_west=new JPanel();
		t_id=new JTextField();
		t_name=new JTextField();
		t_tel=new JTextField();
		bt=new JButton("가입");
		
		p_center=new JPanel();
		// 생성자에 이차원배열의 대입 방식은 불편... 테이블 생성시점에 언제나 데이터가 이미 있어야 한다는 전제 조건이 깔려있기 때문
		// 생성자의 인수에 이 테이블에 보여줘야 할 데이터 또는 데이터처리 객체
		// JTable은 MVC패턴을 어느 정도 반영한 컴포넌트임.. (완벽하진 않음 ; 모델+컨트롤러)
		table=new JTable(myModel=new MyModel());
		scroll=new JScrollPane(table);
		
		// style 적용
		p_west.setBackground(Color.ORANGE);
		p_west.setPreferredSize(new Dimension(150,500));
		
		Dimension d = new Dimension(146, 35); // 크기 재사용 시 사용하는 Dimension
		t_id.setPreferredSize(d);
		t_name.setPreferredSize(d);
		t_tel.setPreferredSize(d);
		
		p_center.setBackground(Color.GREEN);
		scroll.setPreferredSize(new Dimension(445,490));
		
		// 조립
		p_west.add(t_id);
		p_west.add(t_name);
		p_west.add(t_tel);
		p_west.add(bt);
		add(p_west, BorderLayout.WEST); // 프레임의 서쪽에 부착
		
		p_center.add(scroll);
		add(p_center);
		
		setBounds(100, 100, 600, 500);
		setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		
	}
	
	
	public static void main(String[] args) {
		new MemberRegist();
	}
}
